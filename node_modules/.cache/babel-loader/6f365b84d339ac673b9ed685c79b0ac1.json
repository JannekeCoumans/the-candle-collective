{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport products from \"../../data/products\";\nimport { CartContext } from \"contexts/CartContext\"; // const CalculateCartPrice = () => {\n//     const cartItems = JSON.parse(localStorage.getItem('cart'));\n//     let fullCartItems = cartItems.map(item => {\n//         const product = products.filter(product => {\n//             return product.id === item.id;\n//         })\n//         return (product[0].price * item.amount);\n//     });\n//     const totalPrice = fullCartItems.reduce((partial_sum, a) => partial_sum + a,0);\n//     localStorage.setItem('totalCartPrice', totalPrice);\n// }\n\nconst CalculateCartPrice = () => {\n  _s();\n\n  const {\n    cartItems\n  } = useContext(CartContext);\n\n  if (cartItems) {\n    const allPrices = cartItems.map(item => {\n      products.filter(product => {\n        console.log(item.id, 'item.id', product.id, 'product');\n        return product.id === item.id;\n      });\n    });\n    console.log(allPrices);\n  } // console.log(cartItems);\n  // let fullCartItems = cartItems.map(item => {\n  //     const product = products.filter(product => {\n  //         return product.id === item.id;\n  //     })\n  //     return (product[0].price * item.amount);\n  // });\n  // const totalPrice = fullCartItems.reduce((partial_sum, a) => partial_sum + a,0);\n  // localStorage.setItem('totalCartPrice', totalPrice);\n\n\n  return null;\n};\n\n_s(CalculateCartPrice, \"BIN+5BYL7QF018V0+oIA6r/CC2Q=\");\n\n_c = CalculateCartPrice;\nexport default CalculateCartPrice;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateCartPrice\");","map":{"version":3,"sources":["C:/Users/31622/Documents/React Apps/the-candle-collective/src/config/CalculateCartPrice/CalculateCartPrice.js"],"names":["useContext","products","CartContext","CalculateCartPrice","cartItems","allPrices","map","item","filter","product","console","log","id"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,WAAT,QAA4B,sBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAgBJ,UAAU,CAACE,WAAD,CAAhC;;AACA,MAAIE,SAAJ,EAAe;AACb,UAAMC,SAAS,GAAGD,SAAS,CAACE,GAAV,CAAeC,IAAD,IAAU;AACxCN,MAAAA,QAAQ,CAACO,MAAT,CAAiBC,OAAD,IAAa;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,EAAjB,EAAqB,SAArB,EAAgCH,OAAO,CAACG,EAAxC,EAA4C,SAA5C;AACA,eAAOH,OAAO,CAACG,EAAR,KAAeL,IAAI,CAACK,EAA3B;AACD,OAHD;AAID,KALiB,CAAlB;AAMAF,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACD,GAV8B,CAW/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAO,IAAP;AACD,CArBD;;GAAMF,kB;;KAAAA,kB;AAuBN,eAAeA,kBAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport products from \"../../data/products\";\r\nimport { CartContext } from \"contexts/CartContext\";\r\n\r\n// const CalculateCartPrice = () => {\r\n//     const cartItems = JSON.parse(localStorage.getItem('cart'));\r\n//     let fullCartItems = cartItems.map(item => {\r\n//         const product = products.filter(product => {\r\n//             return product.id === item.id;\r\n//         })\r\n//         return (product[0].price * item.amount);\r\n//     });\r\n//     const totalPrice = fullCartItems.reduce((partial_sum, a) => partial_sum + a,0);\r\n//     localStorage.setItem('totalCartPrice', totalPrice);\r\n// }\r\n\r\nconst CalculateCartPrice = () => {\r\n  const { cartItems } = useContext(CartContext);\r\n  if (cartItems) {\r\n    const allPrices = cartItems.map((item) => {\r\n      products.filter((product) => {\r\n        console.log(item.id, 'item.id', product.id, 'product');\r\n        return product.id === item.id;\r\n      });\r\n    });\r\n    console.log(allPrices);\r\n  }\r\n  // console.log(cartItems);\r\n  // let fullCartItems = cartItems.map(item => {\r\n  //     const product = products.filter(product => {\r\n  //         return product.id === item.id;\r\n  //     })\r\n  //     return (product[0].price * item.amount);\r\n  // });\r\n  // const totalPrice = fullCartItems.reduce((partial_sum, a) => partial_sum + a,0);\r\n  // localStorage.setItem('totalCartPrice', totalPrice);\r\n  return null;\r\n};\r\n\r\nexport default CalculateCartPrice;\r\n"]},"metadata":{},"sourceType":"module"}