{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import CalculateCartPrice from '../CalculateCartPrice';\nimport { useContext } from 'react';\nimport { CartContext } from '../../contexts/CartContext';\n\nconst setCartItemsToLocalStorage = cartItem => {\n  let existingCartItems = JSON.parse(localStorage.getItem('cart'));\n  if (existingCartItems == null) existingCartItems = [];\n  const itemExists = existingCartItems.some(item => item.id === cartItem);\n\n  if (itemExists) {\n    const existingItem = existingCartItems.findIndex(item => item.id === cartItem);\n    existingCartItems[existingItem].amount = existingCartItems[existingItem].amount + 1;\n  } else {\n    const itemToAdd = {\n      id: cartItem,\n      amount: 1\n    };\n    existingCartItems.push(itemToAdd);\n  }\n\n  localStorage.setItem('cart', JSON.stringify(existingCartItems));\n  ;\n};\n\nexport default function useCartHandler() {\n  _s();\n\n  const {\n    cartItems,\n    setCartItems\n  } = useContext(CartContext);\n\n  const AddToCartHandler = cartItem => {\n    setCartItemsToLocalStorage(cartItem);\n    const itemExists = cartItems.some(item => item.id === cartItem);\n\n    if (itemExists) {\n      let existingCartItems = cartItems;\n      const existingItem = existingCartItems.findIndex(item => item.id === cartItem);\n      existingCartItems[existingItem].amount = existingCartItems[existingItem].amount + 1;\n      setCartItems(existingCartItems);\n    } else {\n      const itemToAdd = {\n        id: cartItem,\n        amount: 1\n      };\n      setCartItems([...cartItems, itemToAdd]);\n    }\n  };\n\n  const ChangeAmountInCartHandler = (item, amount) => {\n    let existingCartItems = cartItems;\n    let existingLSCartItems = JSON.parse(localStorage.getItem('cart'));\n    const itemToChange = existingCartItems.findIndex(itemToChange => itemToChange.id === item);\n\n    if (existingCartItems[itemToChange].amount === 1 && amount === -1) {\n      RemoveCartItem(item);\n    } else {\n      existingCartItems[itemToChange].amount = existingCartItems[itemToChange].amount + amount;\n      existingLSCartItems[itemToChange].amount = existingLSCartItems[itemToChange].amount + amount;\n      setCartItems(existingCartItems);\n      localStorage.setItem('cart', JSON.stringify(existingLSCartItems));\n    }\n  };\n\n  const RemoveCartItem = id => {\n    let existingCartItems = cartItems;\n    let existingLSCartItems = JSON.parse(localStorage.getItem('cart'));\n    const itemToRemove = existingCartItems.findIndex(itemToChange => itemToChange.id === id);\n    const itemToRemoveLS = existingLSCartItems.findIndex(itemToChange => itemToChange.id === id);\n    existingCartItems.splice(itemToRemove, 1);\n    existingLSCartItems.splice(itemToRemoveLS, 1);\n    setCartItems(existingCartItems);\n    localStorage.setItem('cart', JSON.stringify(existingLSCartItems));\n  };\n\n  return {\n    AddToCartHandler,\n    ChangeAmountInCartHandler,\n    RemoveCartItem\n  };\n}\n\n_s(useCartHandler, \"1fHKHLPXcrXnLh+sGKS6nsgl6gs=\");","map":{"version":3,"sources":["C:/Users/31622/Documents/React Apps/the-candle-collective/src/config/useCartHandler/useCartHandler.js"],"names":["useContext","CartContext","setCartItemsToLocalStorage","cartItem","existingCartItems","JSON","parse","localStorage","getItem","itemExists","some","item","id","existingItem","findIndex","amount","itemToAdd","push","setItem","stringify","useCartHandler","cartItems","setCartItems","AddToCartHandler","ChangeAmountInCartHandler","existingLSCartItems","itemToChange","RemoveCartItem","itemToRemove","itemToRemoveLS","splice"],"mappings":"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","sourcesContent":["// import CalculateCartPrice from '../CalculateCartPrice';\r\nimport { useContext } from 'react';\r\nimport { CartContext } from '../../contexts/CartContext';\r\n\r\nconst setCartItemsToLocalStorage = (cartItem) => {\r\n  let existingCartItems = JSON.parse(localStorage.getItem('cart'));\r\n  if (existingCartItems == null) existingCartItems = [];\r\n  const itemExists = existingCartItems.some(item => item.id === cartItem);\r\n  if (itemExists) {\r\n    const existingItem = existingCartItems.findIndex(item => item.id === cartItem);\r\n    existingCartItems[existingItem].amount = existingCartItems[existingItem].amount + 1\r\n  } else {\r\n    const itemToAdd = { id: cartItem, amount: 1 };\r\n    existingCartItems.push(itemToAdd);\r\n  }\r\n  localStorage.setItem('cart', JSON.stringify(existingCartItems));;\r\n}\r\n\r\nexport default function useCartHandler() {\r\n  const { cartItems, setCartItems } = useContext(CartContext);\r\n\r\n  const AddToCartHandler = (cartItem) => {\r\n    setCartItemsToLocalStorage(cartItem);\r\n    const itemExists = cartItems.some(item => item.id === cartItem);\r\n    if (itemExists) {\r\n      let existingCartItems = cartItems;\r\n      const existingItem = existingCartItems.findIndex(item => item.id === cartItem);\r\n      existingCartItems[existingItem].amount = existingCartItems[existingItem].amount + 1;\r\n      setCartItems(existingCartItems);\r\n    } else {\r\n      const itemToAdd = { id: cartItem, amount: 1 };\r\n      setCartItems([...cartItems, itemToAdd]);\r\n    }\r\n  };\r\n\r\n  const ChangeAmountInCartHandler = (item, amount) => {\r\n    let existingCartItems = cartItems;\r\n    let existingLSCartItems = JSON.parse(localStorage.getItem('cart'));\r\n    const itemToChange = existingCartItems.findIndex(itemToChange => itemToChange.id === item);\r\n    if (existingCartItems[itemToChange].amount === 1 && amount === -1) {\r\n      RemoveCartItem(item);\r\n    } else {\r\n      existingCartItems[itemToChange].amount = existingCartItems[itemToChange].amount + amount;\r\n      existingLSCartItems[itemToChange].amount = existingLSCartItems[itemToChange].amount + amount;\r\n      setCartItems(existingCartItems);\r\n      localStorage.setItem('cart', JSON.stringify(existingLSCartItems));\r\n    }\r\n  }\r\n\r\n  const RemoveCartItem = (id) => {\r\n    let existingCartItems = cartItems;\r\n    let existingLSCartItems = JSON.parse(localStorage.getItem('cart'));\r\n    const itemToRemove = existingCartItems.findIndex(itemToChange => itemToChange.id === id);\r\n    const itemToRemoveLS = existingLSCartItems.findIndex(itemToChange => itemToChange.id === id);\r\n    existingCartItems.splice(itemToRemove, 1);\r\n    existingLSCartItems.splice(itemToRemoveLS, 1);\r\n    setCartItems(existingCartItems);\r\n    localStorage.setItem('cart', JSON.stringify(existingLSCartItems));\r\n  }\r\n\r\n  return { AddToCartHandler, ChangeAmountInCartHandler, RemoveCartItem };\r\n}"]},"metadata":{},"sourceType":"module"}