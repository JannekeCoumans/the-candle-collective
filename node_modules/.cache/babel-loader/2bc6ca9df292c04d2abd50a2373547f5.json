{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\31622\\\\Documents\\\\React Apps\\\\the-candle-collective\\\\src\\\\config\\\\PriceHandler\\\\PriceHandler.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PriceHandler = props => {\n  if (props) {\n    if (props.price && props.price !== undefined) {\n      const {\n        price\n      } = props;\n      let dividedPrice = price / 100;\n\n      const countDecimals = value => {\n        if (Math.floor(value) === value) return 0;\n        return value.toString().split(\".\")[1].length || 0;\n      };\n\n      let updatedPrice;\n\n      if (countDecimals(dividedPrice) !== 0) {\n        updatedPrice = dividedPrice.toString().replace('.', ',');\n        updatedPrice = updatedPrice.toString();\n\n        if (countDecimals(dividedPrice) === 1) {\n          updatedPrice = updatedPrice + '0';\n        }\n      } else {\n        updatedPrice = dividedPrice.toString();\n        updatedPrice = updatedPrice + ',-';\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"price\",\n        children: [\"\\u20AC \", updatedPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    }\n  }\n};\n\n_c = PriceHandler;\nexport default PriceHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceHandler\");","map":{"version":3,"sources":["C:/Users/31622/Documents/React Apps/the-candle-collective/src/config/PriceHandler/PriceHandler.js"],"names":["React","PriceHandler","props","price","undefined","dividedPrice","countDecimals","value","Math","floor","toString","split","length","updatedPrice","replace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE5B,MAAIA,KAAJ,EAAW;AACP,QAAIA,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACC,KAAN,KAAgBC,SAAnC,EAA8C;AAC9C,YAAM;AAAED,QAAAA;AAAF,UAAYD,KAAlB;AAEA,UAAIG,YAAY,GAAGF,KAAK,GAAG,GAA3B;;AAEA,YAAMG,aAAa,GAAIC,KAAD,IAAW;AAC7B,YAAGC,IAAI,CAACC,KAAL,CAAWF,KAAX,MAAsBA,KAAzB,EAAgC,OAAO,CAAP;AAChC,eAAOA,KAAK,CAACG,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,EAA+BC,MAA/B,IAAyC,CAAhD;AACH,OAHD;;AAKA,UAAIC,YAAJ;;AAEA,UAAIP,aAAa,CAACD,YAAD,CAAb,KAAgC,CAApC,EAAuC;AACnCQ,QAAAA,YAAY,GAAGR,YAAY,CAACK,QAAb,GAAwBI,OAAxB,CAAgC,GAAhC,EAAqC,GAArC,CAAf;AACAD,QAAAA,YAAY,GAAGA,YAAY,CAACH,QAAb,EAAf;;AACJ,YAAIJ,aAAa,CAACD,YAAD,CAAb,KAAgC,CAApC,EAAuC;AACnCQ,UAAAA,YAAY,GAAGA,YAAY,GAAG,GAA9B;AACH;AACA,OAND,MAMO;AACHA,QAAAA,YAAY,GAAGR,YAAY,CAACK,QAAb,EAAf;AACAG,QAAAA,YAAY,GAAGA,YAAY,GAAG,IAA9B;AACH;;AACD,0BACI;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,8BAAwBA,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;AACA,CA9BD;;KAAMZ,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\n\r\nconst PriceHandler = (props) => {\r\n\r\n    if (props) {\r\n        if (props.price && props.price !== undefined) {\r\n        const { price } = props;\r\n\r\n        let dividedPrice = price / 100;\r\n        \r\n        const countDecimals = (value) => {\r\n            if(Math.floor(value) === value) return 0;\r\n            return value.toString().split(\".\")[1].length || 0; \r\n        }\r\n\r\n        let updatedPrice;\r\n\r\n        if (countDecimals(dividedPrice) !== 0) {\r\n            updatedPrice = dividedPrice.toString().replace('.', ',');\r\n            updatedPrice = updatedPrice.toString();\r\n        if (countDecimals(dividedPrice) === 1) {\r\n            updatedPrice = updatedPrice + '0';\r\n        }\r\n        } else {\r\n            updatedPrice = dividedPrice.toString();\r\n            updatedPrice = updatedPrice + ',-';\r\n        }\r\n        return (\r\n            <p className=\"price\">â‚¬ {updatedPrice}</p>\r\n        )\r\n    }\r\n}\r\n}\r\n\r\nexport default PriceHandler;"]},"metadata":{},"sourceType":"module"}