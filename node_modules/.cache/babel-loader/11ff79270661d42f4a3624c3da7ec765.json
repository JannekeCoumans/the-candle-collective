{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { CartContext } from \"contexts/CartContext\";\nimport { StorageHandler } from \"config/C4\";\n\nconst CartHandler = () => {\n  _s();\n\n  const {\n    cartItems,\n    setCartItems\n  } = useContext(CartContext);\n\n  const add = (cartItemId, amount) => {\n    let minAmount = amount || 1; // if item is ALREADY in shoppingcart\n\n    if (cartItems.filter(item => item.id === parseInt(cartItemId)).length > 0) {\n      edit(cartItemId, '+');\n    } else {\n      // if item is NOT in shoppingcart\n      const array = [...cartItems];\n      const newItem = {\n        id: parseInt(cartItemId),\n        amount: minAmount\n      };\n      array.push(newItem);\n      setCartItems(array);\n      StorageHandler.set(\"shoppingcart\", array);\n    }\n  };\n\n  const edit = (cartItemId, sum) => {\n    const array = [...cartItems];\n    const itemIndex = array.findIndex(item => item.id === parseInt(cartItemId));\n    const itemToEdit = array[itemIndex];\n\n    if (itemToEdit) {\n      if (sum === \"+\") {\n        itemToEdit.amount += 1;\n      }\n\n      if (sum === \"-\") {\n        if (itemToEdit.amount <= 1) {\n          console.log(\"blocked\");\n        } else {\n          itemToEdit.amount -= 1;\n        }\n      }\n    }\n\n    setCartItems(array);\n    StorageHandler.set(\"shoppingcart\", array);\n  };\n\n  const remove = cartItemId => {\n    const array = [...cartItems];\n    const itemToRemove = array.findIndex(item => item.id === parseInt(cartItemId));\n    array.splice(itemToRemove, 1);\n    setCartItems(array);\n    StorageHandler.set(\"shoppingcart\", array);\n  };\n\n  return {\n    add,\n    edit,\n    remove\n  };\n};\n\n_s(CartHandler, \"1fHKHLPXcrXnLh+sGKS6nsgl6gs=\");\n\n_c = CartHandler;\nexport default CartHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartHandler\");","map":{"version":3,"sources":["C:/Users/31622/Documents/React Apps/the-candle-collective/src/config/CartHandler/CartHandler.js"],"names":["useContext","CartContext","StorageHandler","CartHandler","cartItems","setCartItems","add","cartItemId","amount","minAmount","filter","item","id","parseInt","length","edit","array","newItem","push","set","sum","itemIndex","findIndex","itemToEdit","console","log","remove","itemToRemove","splice"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,cAAT,QAA+B,WAA/B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BL,UAAU,CAACC,WAAD,CAA9C;;AAEA,QAAMK,GAAG,GAAG,CAACC,UAAD,EAAaC,MAAb,KAAwB;AAClC,QAAIC,SAAS,GAAGD,MAAM,IAAI,CAA1B,CADkC,CAGlC;;AACA,QACEJ,SAAS,CAACM,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACN,UAAD,CAA/C,EAA6DO,MAA7D,GAAsE,CADxE,EAEE;AACAC,MAAAA,IAAI,CAACR,UAAD,EAAa,GAAb,CAAJ;AACD,KAJD,MAIO;AACL;AACA,YAAMS,KAAK,GAAG,CAAC,GAAGZ,SAAJ,CAAd;AACA,YAAMa,OAAO,GAAG;AACdL,QAAAA,EAAE,EAAEC,QAAQ,CAACN,UAAD,CADE;AAEdC,QAAAA,MAAM,EAAEC;AAFM,OAAhB;AAIAO,MAAAA,KAAK,CAACE,IAAN,CAAWD,OAAX;AACAZ,MAAAA,YAAY,CAACW,KAAD,CAAZ;AACAd,MAAAA,cAAc,CAACiB,GAAf,CAAmB,cAAnB,EAAmCH,KAAnC;AACD;AACF,GAnBD;;AAqBA,QAAMD,IAAI,GAAG,CAACR,UAAD,EAAaa,GAAb,KAAqB;AAChC,UAAMJ,KAAK,GAAG,CAAC,GAAGZ,SAAJ,CAAd;AACA,UAAMiB,SAAS,GAAGL,KAAK,CAACM,SAAN,CAAiBX,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACN,UAAD,CAA9C,CAAlB;AAEA,UAAMgB,UAAU,GAAGP,KAAK,CAACK,SAAD,CAAxB;;AACA,QAAIE,UAAJ,EAAgB;AACd,UAAIH,GAAG,KAAK,GAAZ,EAAiB;AACfG,QAAAA,UAAU,CAACf,MAAX,IAAqB,CAArB;AACD;;AACD,UAAIY,GAAG,KAAK,GAAZ,EAAiB;AACf,YAAIG,UAAU,CAACf,MAAX,IAAqB,CAAzB,EAA4B;AAC1BgB,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,SAFD,MAEO;AACLF,UAAAA,UAAU,CAACf,MAAX,IAAqB,CAArB;AACD;AACF;AACF;;AACDH,IAAAA,YAAY,CAACW,KAAD,CAAZ;AACAd,IAAAA,cAAc,CAACiB,GAAf,CAAmB,cAAnB,EAAmCH,KAAnC;AACD,GAnBD;;AAqBA,QAAMU,MAAM,GAAInB,UAAD,IAAgB;AAC7B,UAAMS,KAAK,GAAG,CAAC,GAAGZ,SAAJ,CAAd;AACA,UAAMuB,YAAY,GAAGX,KAAK,CAACM,SAAN,CAClBX,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACN,UAAD,CADX,CAArB;AAGAS,IAAAA,KAAK,CAACY,MAAN,CAAaD,YAAb,EAA2B,CAA3B;AACAtB,IAAAA,YAAY,CAACW,KAAD,CAAZ;AACAd,IAAAA,cAAc,CAACiB,GAAf,CAAmB,cAAnB,EAAmCH,KAAnC;AACD,GARD;;AAUA,SAAO;AAAEV,IAAAA,GAAF;AAAOS,IAAAA,IAAP;AAAaW,IAAAA;AAAb,GAAP;AACD,CAxDD;;GAAMvB,W;;KAAAA,W;AA0DN,eAAeA,WAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { CartContext } from \"contexts/CartContext\";\r\nimport { StorageHandler } from \"config/C4\";\r\n\r\nconst CartHandler = () => {\r\n  const { cartItems, setCartItems } = useContext(CartContext);\r\n\r\n  const add = (cartItemId, amount) => {\r\n    let minAmount = amount || 1;\r\n    \r\n    // if item is ALREADY in shoppingcart\r\n    if (\r\n      cartItems.filter((item) => item.id === parseInt(cartItemId)).length > 0\r\n    ) {\r\n      edit(cartItemId, '+');\r\n    } else {\r\n      // if item is NOT in shoppingcart\r\n      const array = [...cartItems];\r\n      const newItem = {\r\n        id: parseInt(cartItemId),\r\n        amount: minAmount,\r\n      };\r\n      array.push(newItem);\r\n      setCartItems(array);\r\n      StorageHandler.set(\"shoppingcart\", array);\r\n    }\r\n  };\r\n\r\n  const edit = (cartItemId, sum) => {\r\n    const array = [...cartItems];\r\n    const itemIndex = array.findIndex((item) => item.id === parseInt(cartItemId));\r\n    \r\n    const itemToEdit = array[itemIndex];\r\n    if (itemToEdit) {\r\n      if (sum === \"+\") {\r\n        itemToEdit.amount += 1;\r\n      }\r\n      if (sum === \"-\") {\r\n        if (itemToEdit.amount <= 1) {\r\n          console.log(\"blocked\");\r\n        } else {\r\n          itemToEdit.amount -= 1;\r\n        }\r\n      }\r\n    }\r\n    setCartItems(array);\r\n    StorageHandler.set(\"shoppingcart\", array);\r\n  };\r\n\r\n  const remove = (cartItemId) => {\r\n    const array = [...cartItems];\r\n    const itemToRemove = array.findIndex(\r\n      (item) => item.id === parseInt(cartItemId)\r\n    );\r\n    array.splice(itemToRemove, 1);\r\n    setCartItems(array);\r\n    StorageHandler.set(\"shoppingcart\", array);\r\n  };\r\n\r\n  return { add, edit, remove };\r\n};\r\n\r\nexport default CartHandler;\r\n"]},"metadata":{},"sourceType":"module"}